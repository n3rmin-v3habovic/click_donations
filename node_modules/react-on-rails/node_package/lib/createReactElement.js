"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createReactElement;

var _react = _interopRequireDefault(require("react"));

/* eslint-disable react/prop-types */

/**
 * Logic to either call the generatorFunction or call React.createElement to get the
 * React.Component
 * @param options
 * @param options.componentObj
 * @param options.props
 * @param options.domNodeId
 * @param options.trace
 * @param options.location
 * @returns {Element}
 */
function createReactElement(_ref) {
  var componentObj = _ref.componentObj,
      props = _ref.props,
      railsContext = _ref.railsContext,
      domNodeId = _ref.domNodeId,
      trace = _ref.trace,
      shouldHydrate = _ref.shouldHydrate;
  var name = componentObj.name,
      component = componentObj.component,
      generatorFunction = componentObj.generatorFunction;

  if (trace) {
    if (railsContext && railsContext.serverSide) {
      console.log("RENDERED ".concat(name, " to dom node with id: ").concat(domNodeId));
    } else if (shouldHydrate) {
      console.log("HYDRATED ".concat(name, " in dom node with id: ").concat(domNodeId, " using props, railsContext:"), props, railsContext);
    } else {
      console.log("RENDERED ".concat(name, " to dom node with id: ").concat(domNodeId, " with props, railsContext:"), props, railsContext);
    }
  }

  if (generatorFunction) {
    return component(props, railsContext);
  }

  return _react.default.createElement(component, props);
}